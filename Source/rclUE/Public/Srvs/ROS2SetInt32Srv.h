// Copyright 2021 Rapyuta Robotics Co., Ltd.
// This code has been autogenerated from UE_msgs/SetInt32.srv - do not modify

#pragma once

#include <CoreMinimal.h>

#include "Srvs/ROS2GenericSrv.h"
#include "rclcUtilities.h"
#include "ue_msgs/srv/set_int32.h"

#include "ROS2SetInt32Srv.generated.h"

// potential problem: if this struct is defined multiple times!
USTRUCT(Blueprintable)
struct RCLUE_API FROSSetInt32_Request
{
	GENERATED_BODY()

public:
	UPROPERTY(EditAnywhere, BlueprintReadWrite)
	int data;

	

	void SetFromROS2(const ue_msgs__srv__SetInt32_Request& in_ros_data)
	{
    	data = in_ros_data.data;

		
	}

	void SetROS2(ue_msgs__srv__SetInt32_Request& out_ros_data) const
	{
    	out_ros_data.data = data;

		
	}
};

USTRUCT(Blueprintable)
struct RCLUE_API FROSSetInt32_Response
{
	GENERATED_BODY()

public:
	UPROPERTY(EditAnywhere, BlueprintReadWrite)
	bool success;

	UPROPERTY(EditAnywhere, BlueprintReadWrite)
	FString remarks;

	

	void SetFromROS2(const ue_msgs__srv__SetInt32_Response& in_ros_data)
	{
    	success = in_ros_data.success;

		remarks.AppendChars(in_ros_data.remarks.data, in_ros_data.remarks.size);

		
	}

	void SetROS2(ue_msgs__srv__SetInt32_Response& out_ros_data) const
	{
    	out_ros_data.success = success;

		{
			FTCHARToUTF8 strUtf8( *remarks );
			int32 strLength = strUtf8.Length();
			if (out_ros_data.remarks.data != nullptr)
		{
			free(out_ros_data.remarks.data);
		}
		out_ros_data.remarks.data = (decltype(out_ros_data.remarks.data))malloc((strLength+1)*sizeof(decltype(*out_ros_data.remarks.data)));
		memcpy(out_ros_data.remarks.data, TCHAR_TO_UTF8(*remarks), (strLength+1)*sizeof(char));
			out_ros_data.remarks.size = strLength;
			out_ros_data.remarks.capacity = strLength + 1;
		}

		
	}
};

UCLASS()
class RCLUE_API UROS2SetInt32Srv : public UROS2GenericSrv
{
	GENERATED_BODY()

public:
  	UFUNCTION(BlueprintCallable)
	virtual void Init() override;

  	UFUNCTION(BlueprintCallable)
	virtual void Fini() override;

	virtual const rosidl_service_type_support_t* GetTypeSupport() const override;
	
	// used by client
  	UFUNCTION(BlueprintCallable)
	void SetRequest(const FROSSetInt32_Request& Request);
	
	// used by service
  	UFUNCTION(BlueprintCallable)
	void GetRequest(FROSSetInt32_Request& Request) const;
	
	// used by service
  	UFUNCTION(BlueprintCallable)
	void SetResponse(const FROSSetInt32_Response& Response);
	
	// used by client
  	UFUNCTION(BlueprintCallable)
	void GetResponse(FROSSetInt32_Response& Response) const;
	
	virtual void* GetRequest() override;
	virtual void* GetResponse() override;

private:
	virtual FString SrvRequestToString() const override;
	virtual FString SrvResponseToString() const override;

	ue_msgs__srv__SetInt32_Request SetInt32_req;
	ue_msgs__srv__SetInt32_Response SetInt32_res;
};