// Copyright 2021 Rapyuta Robotics Co., Ltd.
// This code has been autogenerated from sensor_msgs/NavSatStatus.msg - do not modify

#pragma once

#include <CoreMinimal.h>

#include "sensor_msgs/msg/nav_sat_status.h"

#include "ROS2GenericMsg.h"
#include "rclcUtilities.h"

#include "ROS2NavSatStatusMsg.generated.h"

// TODO - Unreal only supports uint8 as base types for enums
// UENUM(BlueprintType)
// enum class UROSNavSatStatusStatus : int8
// {
// 	STATUS_NO_FIX =  -1, // unable to fix position
// 	STATUS_FIX =      0, // unaugmented fix
// 	STATUS_SBAS_FIX = 1, // with satellite-based augmentation
// 	STATUS_GBAS_FIX = 2 // with ground-based augmentation
// };

// UENUM(BlueprintType)
// enum class UROSNavSatStatusService : uint16
// {
// 	SERVICE_GPS =     1,
// 	SERVICE_GLONASS = 2,
// 	SERVICE_COMPASS = 4,    // includes BeiDou.
// 	SERVICE_GALILEO = 8
// };

USTRUCT(Blueprintable)
struct RCLUE_API FROSNavSatStatus
{
	GENERATED_BODY()

public:
	UPROPERTY(EditAnywhere, BlueprintReadWrite)
	int32 status; // original int8

	UPROPERTY(EditAnywhere, BlueprintReadWrite)
	int32 service; // original uint16

	void SetFromROS2(const sensor_msgs__msg__NavSatStatus& in_ros_data)
	{
    	// status = static_cast<UROSNavSatStatusStatus>(in_ros_data.status);
		// service = static_cast<UROSNavSatStatusService>(in_ros_data.service);
    	status = in_ros_data.status;
		service = in_ros_data.service;
	}

	void SetROS2(sensor_msgs__msg__NavSatStatus& out_ros_data) const
	{
    	// out_ros_data.status = static_cast<int8>(status);
		// out_ros_data.service = static_cast<uint16>(service);
    	out_ros_data.status = status;
		out_ros_data.service = service;
	}
};

UCLASS()
class RCLUE_API UROS2NavSatStatusMsg : public UROS2GenericMsg
{
	GENERATED_BODY()

public:
	virtual void Init() override;
	virtual void Fini() override;

	virtual const rosidl_message_type_support_t* GetTypeSupport() const override;
	
  	UFUNCTION(BlueprintCallable)
	void SetMsg(const FROSNavSatStatus& Input);
	
  	UFUNCTION(BlueprintCallable)
	void GetMsg(FROSNavSatStatus& Output) const;
	
	virtual void* Get() override;

private:
	virtual FString MsgToString() const override;

	sensor_msgs__msg__NavSatStatus nav_sat_status_msg;
};